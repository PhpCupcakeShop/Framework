<?php

use PhpCupcakes\Helpers\FormHelper;
use PhpCupcakes\Helpers\LoadHtml;
use PhpCupcakes\Config\ConfigVars;
?>
<!DOCTYPE html>
<html lang="en">
 <head>
 <meta name="robots" content="noindex, nofollow" />
  <meta charset="UTF-8">
  <meta name="description" content="PHP Cupcake Shop Framework Demo">
 <meta name="keywords" content="PHP, Framework, Demo">
  <meta name="author" content="aemegi">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Objects</title>
    <link rel="stylesheet" href="<?= ConfigVars::getWWW() ?>/assets/css/styles.css">   <!--linkhere--> 
    <link rel="stylesheet" href="<?= ConfigVars::getWWW() ?>/assets/css/colors.css">  <!--linkhere--> 
</head>
<body>
    <div class="container">
    <header>
        <?php
        echo LoadHtml::loadInclude("header");
        ?>
    <div class="search bg-info"><?= LoadHtml::loadInclude("searchform") ?></div>
</header>
    <nav class="bg-success-light text-dark"><?= LoadHtml::loadInclude("nav") ?>
<?php
use PhpCupcakes\EditMode\EditLink;
echo EditLink::displayEditModeNav();
echo EditLink::displayEditLink();
?></nav>
    <div class="mainparent">
<main>
    <?php

    require_once ConfigVars::getFrameworkSrc() . "/EditMode/auth.inc.php"; /*linkhere*/
    // Render the form open tag
    echo FormHelper::renderFormOpen(ConfigVars::getSiteUrl()."/admin/".$routedClassNamespaceRoot."/added/".basename($routedClassNamespace), "post", [
        "class" => "form-horizontal",
    ]); // Render form fields
    foreach ($routedClassNamespace::$propertyMetadata as $columnName => $metadata) {
        $tableName = $routedClassNamespace::getTableName();
        if ($metadata["isForm"] == false) {
        } else {
            $renderFormField = "render" . $metadata["formfield"];
            $placeholder = $metadata["placeholder"];
            echo FormHelper::$renderFormField(
                $tableName . "-" . $columnName,
                "",
                ["class" => "form-control", "placeholder" => $placeholder]
            );
        }
    }

//include the CSRF token
?><input type="hidden" name="csrf_token" value="<?php echo $_SESSION[
    "csrf_token"
]; ?>"><?php
// Render the submit button
echo FormHelper::renderSubmit("Submit", "submit", [
    "class" => "btn btn-primary",
]);
// Render the form close tag
echo FormHelper::renderFormClose();
?>
</main></div>
</div></body>
</html>
